
-----****FLESSIBILITA'****----- 	
// Se il valore di M1 è negativo, indica che l'energia è assorbita dalla rete; se è positivo, indica che l'energia è immessa nella rete.

-----M1 MASSIMO-----
// (va più energia nella rete) ---> non carico batteria, però se mi serve prendo da batteria. valido per tutte le conf.

alpha = generatorEnergyProduction - load 
if(alpha < 0){ //devo assorbire dalla rete o dalla batteria
	if(abs(alpha) < battDischargeableEnergy) { //l'energia richiesta dal load può essere soddisfatta dalla batteria
		m1 = 0 //ho già preso tutti i kw dal generatore quindi non esce niente verso la rete
		energiaAssorbitaDallaBatteria = abs(alpha)
	} else { //non mi basta assorbire dalla batteria, devo prendere dalla rete
		m1 = battDischargeableEnergy + alpha //sarà un valore negativo
	}
} else { //soddisfo tutto il load con solo il generatore
	m1 = alpha //sarà positivo
}
-------------------

-----M1 MINIMO-----
// (va meno energia nella rete) ---> carico batteria prelevando anche dalla rete 

if(conf02 or conf03) { //la batteria assorbe anche dalla rete se serve
	m1 = generatore - load - battChargeableEnergy
} else { //conf01 la batteria assorbe solo dal generatore
	m1 = generatore - load
}
-------------------


PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bat: <http://www.semanticweb.org/cyrill/ontologies/2023/3/battery/>
PREFIX pros: <http://www.semanticweb.org/prosumer#>
PREFIX : <http://www.semanticweb.org/prosumer/>
PREFIX saref: <https://saref.etsi.org/core/>
PREFIX sf2: <https://saref.etsi.org/>
PREFIX ic: <http://ontology.tno.nl/interconnect/datapoint#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?prosumer ?battery ?M1max ?batTimestamp  #?M1min ?timestamp ?m1value
WHERE {
  ?prosumer rdf:type :Prosumer .
  ?prosumer :composedBy ?system .
  ?system rdf:type bat:StorageSystem .
  ?prosumer :composedBy ?generator .
  ?generator rdf:type :Generator .
  ?prosumer :composedBy ?load .
  ?load rdf:type :Load .
  
  ?generator sf2:measuresProperty ?genMeasurement .
  ?genMeasurement ic:hasDataPoint ?genData .
  ?genData saref:hasTimestamp ?genTimestamp .
  ?genData pros:hasValueEnergyProduced ?genValue .

  ?load sf2:measuresProperty ?loadMeasurement .
  ?loadMeasurement ic:hasDataPoint ?loadData .
  ?loadData saref:hasTimestamp ?loadTimestamp .
  ?loadData pros:hasValueEnergyAbsorbed ?loadValue .
    
  ?system saref:consistsOf ?battery .
  ?battery sf2:measuresProperty ?batterySOC .
  ?batterySOC sf2:relatesToMeasurement ?batMeasurement .
  #?batMeasurement saref:hasValue ?batValue .
  ?batMeasurement saref:hasTimestamp ?batTimestamp .
  ?batMeasurement pros:hasBatteryChargeableEnergy ?battChargeableEnergy .
  ?batMeasurement pros:hasBatteryDischargeableEnergy ?battDischargeableEnergy .

  FILTER((xsd:string(?batTimestamp) = xsd:string(?loadTimestamp)) && (xsd:string(?batTimestamp) = xsd:string(?genTimestamp)))

  BIND((?battDischargeableEnergy + ?alpha) as ?m1)
  BIND((?genValue - ?loadValue) as ?alpha)
  BIND( 
    if(?alpha < 0,
      if( ABS(?alpha) < ?battDischargeableEnergy,
       0,
       ?m1
      ),
      ?alpha 
    )
  as ?M1max)

}

GROUP BY ?prosumer ?battery ?M1max ?batTimestamp 
