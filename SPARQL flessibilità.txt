
-----****FLESSIBILITA'****----- 	
// Se il valore di M1 è negativo, indica che l'energia è assorbita dalla rete; se è positivo, indica che l'energia è immessa nella rete.

alpha = generatorEnergyProduction - load //NOTA: nell'ontologia il valore load è negativo, va quindi fatta l'operazione di add e non di subtract.

-----M1 MASSIMO-----
// (va più energia nella rete) ---> non carico batteria, però se mi serve prendo da batteria. valido per tutte le conf.

if(alpha < 0){ //devo assorbire dalla rete o dalla batteria
	if(abs(alpha) < battDischargeableEnergy) { //l'energia richiesta dal load può essere soddisfatta dalla batteria
		M1max = 0 //ho già preso tutti i kw dal generatore quindi non esce niente verso la rete
		energiaAssorbitaDallaBatteria = abs(alpha)
	} else { //non mi basta assorbire dalla batteria, devo prendere dalla rete
		M1max = battDischargeableEnergy + alpha //sarà un valore negativo
	}
} else { //soddisfo tutto il load con solo il generatore
	M1max = alpha //sarà positivo
}
-------------------

-----M1 MINIMO-----
// (va meno energia nella rete) ---> carico batteria prelevando anche dalla rete 

if(conf02 or conf03) { //la batteria assorbe anche dalla rete
	M1min = alpha - battChargeableEnergy
} else { //conf01 la batteria assorbe solo dal generatore
  if(alpha > 0) { //se alpha > 0 è energia che avanza dal generatore
    M1min = alpha - min(battChargeableEnergy, alpha) //faccio assorbire tutta l'energia possibile alla batteria
  } else { //se non avanza energia dal generatore non metto nulla nella batteria, in conf01 posso solo ricaricarla dal generatore
    M1min = alpha
  }
	
}
-------------------

PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bat: <http://www.semanticweb.org/cyrill/ontologies/2023/3/battery/>
PREFIX pros: <http://www.semanticweb.org/prosumer#>
PREFIX : <http://www.semanticweb.org/prosumer/>
PREFIX saref: <https://saref.etsi.org/core/>
PREFIX sf2: <https://saref.etsi.org/>
PREFIX ic: <http://ontology.tno.nl/interconnect/datapoint#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?prosumer ?battery ?batTimestamp ?battChargeableEnergy ?battDischargeableEnergy ?M1max ?M1min
WHERE {
  ?prosumer rdf:type :Prosumer .
  ?prosumer :composedBy ?system .
  ?system rdf:type bat:StorageSystem .
  ?prosumer :composedBy ?generator .
  ?generator rdf:type :Generator .
  ?prosumer :composedBy ?load .
  ?load rdf:type :Load .
  
  ?generator sf2:measuresProperty ?genMeasurement .
  ?genMeasurement ic:hasDataPoint ?genData .
  ?genData saref:hasTimestamp ?genTimestamp .
  ?genData pros:hasValueEnergyProduced ?genValue .

  ?load sf2:measuresProperty ?loadMeasurement .
  ?loadMeasurement ic:hasDataPoint ?loadData .
  ?loadData saref:hasTimestamp ?loadTimestamp .
  ?loadData pros:hasValueEnergyAbsorbed ?loadValue .
    
  ?system saref:consistsOf ?battery .
  ?battery sf2:measuresProperty ?batterySOC .
  ?batterySOC sf2:relatesToMeasurement ?batMeasurement .
  #?batMeasurement saref:hasValue ?batValue .
  ?batMeasurement saref:hasTimestamp ?batTimestamp .
  ?batMeasurement pros:hasBatteryChargeableEnergy ?battChargeableEnergy .
  ?batMeasurement pros:hasBatteryDischargeableEnergy ?battDischargeableEnergy .

  FILTER((xsd:string(?batTimestamp) = xsd:string(?loadTimestamp)) && (xsd:string(?batTimestamp) = xsd:string(?genTimestamp)))
  
  BIND((?genValue + ?loadValue) as ?alpha)
  BIND( 
    if(?alpha < 0,
      if( ABS(?alpha) < ?battDischargeableEnergy,
       0,
       ?battDischargeableEnergy + ?alpha
      ),
      ?alpha 
    )
  as ?M1max)

    ?prosumer rdf:type ?type .

   FILTER(?type = :Config01 || ?type = :Config02 || ?type = :Config03) 
    BIND(
     IF((?type = :Config02 || ?type = :Config03),
      ?alpha - ?battChargeableEnergy,
      IF(?alpha > 0,
        IF(?alpha < ?battChargeableEnergy,
          0,
          ?alpha - ?battChargeableEnergy
        ),
        ?alpha
      )
    )
  as ?M1min)

}

GROUP BY ?prosumer ?battery ?batTimestamp ?M1max ?M1min ?battDischargeableEnergy ?battChargeableEnergy
ORDER BY ?prosumer ?battery ?batTimestamp



----------------
//query per kw totali caricabili/scaricabili da uno StorageSystem (composto da più batterie)
//sarebbe da mettere come subquery della precedente e utilizzare nei calcoli i valori storageSystemChargeableEnergy e storageSystemDischargeableEnergy al posto di battChargeableEnergy e battDischargeableEnergy. Non è stato fatto perche Protègè non supporta le subquery (https://github.com/protegeproject/snap-sparql-query/issues/10)


PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bat: <http://www.semanticweb.org/cyrill/ontologies/2023/3/battery/>
PREFIX pros: <http://www.semanticweb.org/prosumer#>
PREFIX : <http://www.semanticweb.org/prosumer/>
PREFIX saref: <https://saref.etsi.org/core/>
PREFIX sf2: <https://saref.etsi.org/>
PREFIX ic: <http://ontology.tno.nl/interconnect/datapoint#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?system ?batTimestamp (SUM(?battChargeableEnergy) as ?storageSystemChargeableEnergy) (SUM(?battDischargeableEnergy) as ?storageSystemDischargeableEnergy)
WHERE {
  ?system rdf:type bat:StorageSystem .    
  ?system saref:consistsOf ?battery .

  ?battery sf2:measuresProperty ?batterySOC .
  ?batterySOC sf2:relatesToMeasurement ?batMeasurement .
  
  ?batMeasurement saref:hasTimestamp ?batTimestamp .
  ?batMeasurement pros:hasBatteryChargeableEnergy ?battChargeableEnergy .
  ?batMeasurement pros:hasBatteryDischargeableEnergy ?battDischargeableEnergy .
}
GROUP BY ?system ?batTimestamp 
ORDER BY ?system ?batTimestamp 